{"ast":null,"code":"var _jsxFileName = \"/Users/koborihiroshi/develop_now/frontend/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { useForm } from \"react-hook-form\";\nimport Moment from 'react-moment';\nimport * as Api from \"../service/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Responce = styled.div`\n  margin: 90px 110px 0px;\n`;\n_c = Responce;\nconst ResPost = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 20px;\n  border-bottom: 1px dotted #dcdcdc;\n  padding-bottom: 5px;\n  margin-bottom: 1em;\n`;\n_c2 = ResPost;\nconst Name = styled.input`\n  width: 100%;\n  font-size: 130%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c3 = Name;\nconst MessageArea = styled.textarea`\n  width: 100%;\n  font-size: 170%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c4 = MessageArea;\nconst Write = styled(Button)`\n  float: right;\n  font-size: 20px;\n`;\n_c5 = Write;\nconst Bold = styled.b`\n  color: #3f51b5;\n`;\n_c6 = Bold;\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1\n  }\n}));\nconst Post = styled.div`\n  font-size: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  border-style: none solid solid none;\n  border-color: #ddd;\n`;\n_c7 = Post;\nconst Message = styled.div`\n  padding: 12px 0px;\n`;\n_c8 = Message;\nconst ErrorMsg = styled.span`\n  color: deeppink;\n  font-weight: 700;\n`;\n_c9 = ErrorMsg;\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`;\n_c10 = Main;\n\nconst Thread = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [posts, setPosts] = useState([]);\n\n  const onSubmit = (data, e) => {\n    if (data.name === '') {\n      data.name = '名無しさん';\n    } // axios.post('http://127.0.0.1:8000/bbs/index/', data,{\n    //   headers: { \"Content-Type\": \"application/json\" },\n    // })\n    // .then(res => {\n    //   setPosts(prevPosts => [...prevPosts,res.data])\n    //   setValue('name', '')\n    //   setValue('message', '')\n    //   e.target.reset();\n    // })\n    // .catch(res => {\n    //   console.log(res)\n    // })\n\n\n    Api.addBbs(data.name, data.comment);\n  };\n\n  const classes = useStyles();\n  useEffect(() => {\n    // Todo一覧を取得\n    fetch();\n  }, []);\n\n  const fetch = async () => {\n    const data = await Api.initGet();\n    await setTodos(data);\n  }; // useEffect(() => {\n  //   axios.get<Array<PostType>>('http://127.0.0.1:8000/bbs/index/')\n  //     .then((res) => setPosts(res.data));\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [post.id, \".  \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(Bold, {\n                    children: [post.name, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"YYYY\\u5E74MM\\u6708DD\\u65E5 HH:mm:ss \",\n                  children: post.created_at\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"ID:\", post.ip]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Message, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Responce, {\n          children: [/*#__PURE__*/_jsxDEV(ResPost, {\n            children: \"\\u30EC\\u30B9\\u3092\\u6295\\u7A3F\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [errors.name && /*#__PURE__*/_jsxDEV(ErrorMsg, {\n              children: \"\\u540D\\u524D\\u304C\\u9577\\u3059\\u304E\\u307E\\u3059\\uFF01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Name, { ...register(\"name\", {\n                maxLength: 20\n              }),\n              placeholder: '名前(省略可)',\n              size: 70\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), errors.comment && /*#__PURE__*/_jsxDEV(ErrorMsg, {\n              children: \"\\u672C\\u6587\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\uFF01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(MessageArea, { ...register(\"comment\", {\n                required: true\n              }),\n              placeholder: 'コメント内容',\n              rows: 5,\n              cols: 70\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Write, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              endIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 94\n              }, this),\n              type: \"submit\",\n              children: \"\\u66F8\\u304D\\u8FBC\\u3080\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thread, \"SZ67Ap+Hh9KKeJv5m2scQ1zsd3c=\", false, function () {\n  return [useForm, useStyles];\n});\n\n_c11 = Thread;\nexport default Thread;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Responce\");\n$RefreshReg$(_c2, \"ResPost\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"MessageArea\");\n$RefreshReg$(_c5, \"Write\");\n$RefreshReg$(_c6, \"Bold\");\n$RefreshReg$(_c7, \"Post\");\n$RefreshReg$(_c8, \"Message\");\n$RefreshReg$(_c9, \"ErrorMsg\");\n$RefreshReg$(_c10, \"Main\");\n$RefreshReg$(_c11, \"Thread\");","map":{"version":3,"sources":["/Users/koborihiroshi/develop_now/frontend/src/components/Thread.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","Button","CreateIcon","Container","styled","useForm","Moment","Api","Responce","div","ResPost","Name","input","MessageArea","textarea","Write","Bold","b","useStyles","theme","button","margin","spacing","root","flexGrow","Post","Message","ErrorMsg","span","Main","main","Thread","register","handleSubmit","formState","errors","posts","setPosts","onSubmit","data","e","name","addBbs","comment","classes","fetch","initGet","setTodos","map","post","index","id","created_at","ip","maxLength","required"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport Moment from 'react-moment';\nimport * as Api from \"../service/api\"\n\n\ntype FormInputs = {\n  name: string,\n  comment: string,\n};\n\nconst Responce = styled.div`\n  margin: 90px 110px 0px;\n`\nconst ResPost = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 20px;\n  border-bottom: 1px dotted #dcdcdc;\n  padding-bottom: 5px;\n  margin-bottom: 1em;\n`\nconst Name = styled.input`\n  width: 100%;\n  font-size: 130%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`\nconst MessageArea = styled.textarea`\n  width: 100%;\n  font-size: 170%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`\n\nconst Write = styled(Button)`\n  float: right;\n  font-size: 20px;\n`\n\nconst Bold = styled.b`\n  color: #3f51b5;\n`\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Post = styled.div`\n  font-size: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  border-style: none solid solid none;\n  border-color: #ddd;\n`\nconst Message = styled.div`\n  padding: 12px 0px;\n`\n\nconst ErrorMsg = styled.span`\n  color: deeppink;\n  font-weight: 700;\n`\n\ntype PostType = {\n  id: number;\n  name: string;\n  comment: string;\n  ip: string;\n  week: string;\n  created_at: string;\n}\n\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`\n\nconst Thread: React.FC =  () => {\n  const { register, handleSubmit, formState: { errors } } = useForm<FormInputs>();\n\n  const [posts, setPosts] = useState<Array<PostType>>([]);\n  \n  const onSubmit: SubmitHandler<FormInputs> = (data: FormInputs, e: any) => {\n    if(data.name === ''){\n      data.name = '名無しさん'\n    }\n    // axios.post('http://127.0.0.1:8000/bbs/index/', data,{\n    //   headers: { \"Content-Type\": \"application/json\" },\n    // })\n    // .then(res => {\n    //   setPosts(prevPosts => [...prevPosts,res.data])\n    //   setValue('name', '')\n    //   setValue('message', '')\n    //   e.target.reset();\n    // })\n    // .catch(res => {\n    //   console.log(res)\n    // })\n    Api.addBbs(data.name, data.comment);\n  };\n\n  const classes = useStyles();\n\n  useEffect(()=>{\n    // Todo一覧を取得\n    fetch();\n  }, [])\n\n  const fetch = async() => {\n      const data = await Api.initGet();\n      await setTodos(data);\n  }\n  // useEffect(() => {\n  //   axios.get<Array<PostType>>('http://127.0.0.1:8000/bbs/index/')\n  //     .then((res) => setPosts(res.data));\n  // }, []);\n\n  return (\n    <React.Fragment>\n      <Main>\n        <Container>\n          <div className={classes.root}>\n            {posts.map((post, index) => (\n              <div key={index}>\n                <Post>\n                <div>\n                  <span>{post.id}.  </span>\n                  <span>\n                    <Bold>{post.name} </Bold>\n                  </span>\n                  <Moment format=\"YYYY年MM月DD日 HH:mm:ss \">\n                    {post.created_at}\n                  </Moment>\n                  <span>ID:{post.ip}</span>\n                </div>\n                <Message>\n                  <span>{post.comment}</span>\n                </Message>\n              </Post>\n              </div>\n            ))}\n          </div>\n          <Responce>\n            <ResPost>レスを投稿する</ResPost>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              {errors.name && <ErrorMsg>名前が長すぎます！</ErrorMsg>}\n              <Name {...register(\"name\", { maxLength: 20 })} placeholder={'名前(省略可)'} size={70} />\n              {errors.comment && <ErrorMsg>本文がありません！</ErrorMsg>}\n              <MessageArea {...register(\"comment\", { required: true })} placeholder={'コメント内容'} rows={5} cols={70} />\n              <Write variant=\"contained\" color=\"primary\" className={classes.button} endIcon={<CreateIcon/>} type='submit'>書き込む</Write>\n            </form>\n          </Responce>\n        </Container>\n      </Main>\n    </React.Fragment>\n  );\n}\n\nexport default Thread;"]},"metadata":{},"sourceType":"module"}