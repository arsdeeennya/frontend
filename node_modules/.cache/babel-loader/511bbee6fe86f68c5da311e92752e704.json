{"ast":null,"code":"var _jsxFileName = \"/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = styled.main`\n  background-color: #f2f3f7;\n`;\n_c = Main;\n\nconst Home = () => {\n  _s();\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper\n    },\n    gridList: {\n      width: 500,\n      height: 450\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)'\n    },\n    heroContent: {\n      padding: theme.spacing(8, 0, 6)\n    }\n  }));\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: /*#__PURE__*/_jsxDEV(GridList, {\n            cellHeight: 180,\n            className: classes.gridList,\n            children: [/*#__PURE__*/_jsxDEV(GridListTile, {\n              cols: 2,\n              style: {\n                height: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n                component: \"div\",\n                children: \"December\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, \"Subheader\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), tileData.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: tile.img,\n                alt: tile.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n                title: tile.title,\n                subtitle: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"by: \", tile.author]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 33\n                }, this),\n                actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                  \"aria-label\": `info about ${tile.title}`,\n                  className: classes.icon,\n                  children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this)]\n            }, tile.img, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", true);\n\n_c2 = Home;\nexport default Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"sources":["/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Home.tsx"],"names":["React","Container","styled","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","Main","main","Home","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","heroContent","padding","spacing","classes","tileData","map","tile","img","title","author"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst Main = styled.main`\n  background-color: #f2f3f7;\n`\n\nconst Home: React.FC =  () => {\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 500,\n      height: 450,\n    },\n    icon: {\n      color: 'rgba(255, 255, 255, 0.54)',\n    },\n    heroContent: {\n      padding: theme.spacing(8, 0, 6),\n    },\n  }));\n\n  const classes = useStyles();\n\n  \n\n  return (\n    <React.Fragment>\n      <Main>\n          <Container maxWidth=\"lg\">\n             <div className={classes.root}>\n              <GridList cellHeight={180} className={classes.gridList}>\n                <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                  <ListSubheader component=\"div\">December</ListSubheader>\n                </GridListTile>\n                {tileData.map((tile) => (\n                  <GridListTile key={tile.img}>\n                    <img src={tile.img} alt={tile.title} />\n                    <GridListTileBar\n                      title={tile.title}\n                      subtitle={<span>by: {tile.author}</span>}\n                      actionIcon={\n                        <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                          <InfoIcon />\n                        </IconButton>\n                      }\n                    />\n                  </GridListTile>\n                ))}\n              </GridList>\n            </div>      \n          </Container>\n      </Main>\n    </React.Fragment>\n  );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}