{"ast":null,"code":"var _jsxFileName = \"/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ThreadList from './ThreadList';\nimport ThreadForm from './ThreadForm';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`;\n_c = Main;\n\nconst Thread = () => {\n  _s();\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsOpen(true),\n      children: \"Open Modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsOpen(false),\n        children: \"Close Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(ThreadList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThreadForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thread, \"EOxo+0MXKxyCdUCTWpcfchJ0gFI=\");\n\n_c2 = Thread;\nexport default Thread;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"Thread\");","map":{"version":3,"sources":["/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Thread.tsx"],"names":["React","ThreadList","ThreadForm","Container","styled","Modal","Main","main","Thread","modalIsOpen","setIsOpen","useState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAGA,MAAMC,IAAI,GAAGF,MAAM,CAACG,IAAK;AACzB;AACA;AACA,CAHA;KAAMD,I;;AAKN,MAAME,MAAgB,GAAI,MAAM;AAAA;;AAC9B,QAAM,CAACC,WAAD,EAAcC,SAAd,IAA2BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAjC;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMD,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAED,WAAf;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,KAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,IAAD;AAAA,6BACE,QAAC,SAAD;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjBD;;GAAMF,M;;MAAAA,M;AAmBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport ThreadList from './ThreadList';\nimport ThreadForm from './ThreadForm';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components'\nimport Modal from \"react-modal\";\n\n\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`\n\nconst Thread: React.FC =  () => {\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  return (\n    <React.Fragment>\n      <button onClick={() => setIsOpen(true)}>Open Modal</button>\n      <Modal isOpen={modalIsOpen}>\n        <button onClick={() => setIsOpen(false)}>Close Modal</button>\n      </Modal>\n      <Main>\n        <Container>\n          <ThreadList/>\n          <ThreadForm/>\n        </Container>\n      </Main>\n    </React.Fragment>\n  );\n}\n\nexport default Thread;"]},"metadata":{},"sourceType":"module"}