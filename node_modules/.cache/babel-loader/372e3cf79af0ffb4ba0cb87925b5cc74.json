{"ast":null,"code":"var _jsxFileName = \"/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport styled from 'styled-components';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Responce = styled.div`\n  margin: 90px 110px 0px;\n`;\nconst ResPost = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 20px;\n  border-bottom: 1px dotted #dcdcdc;\n  padding-bottom: 5px;\n  margin-bottom: 1em;\n`;\nconst Name = styled.input`\n  width: 100%;\n  font-size: 130%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\nconst Comment = styled.textarea`\n  width: 100%;\n  font-size: 170%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\nconst Write = styled(Button)`\n  float: right;\n  font-size: 20px;\n`;\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1\n  }\n}));\nconst Post = styled.div`\n  font-size: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  // display: inline-block;\n  border-style: none solid solid none;\n  border-color: #ddd;\n`;\nconst Message = styled.div`\n  padding: 12px 0px;\n`;\nconst ErrorMsg = styled.span`\n  color: deeppink;\n  font-weight: 700;\n`;\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`;\n\nconst Thread = () => {\n  _s();\n\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [posts, setPosts] = useState([]);\n\n  const onSubmit = (data, e) => {\n    if (data.name === '') {\n      data.name = '森のくまさん';\n    }\n\n    axios.post('http://127.0.0.1:8000/bbs/index/', data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setPosts([...posts, res.data]);\n      setValue('name', '');\n      setValue('message', '');\n      e.target.reset();\n    }).catch(res => {\n      console.log(res);\n    });\n  };\n\n  const classes = useStyles();\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/bbs/index/').then(res => setPosts(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u307E\\u3060\\u3064\\u304F\\u3063\\u3066\\u306A\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thread, \"ZPn1JOC83zjjAZt7zAtVdGi88bk=\", false, function () {\n  return [useForm, useStyles];\n});\n\n_c = Thread;\nexport default Thread;\n\nvar _c;\n\n$RefreshReg$(_c, \"Thread\");","map":{"version":3,"sources":["/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Thread.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","axios","Button","styled","useForm","Responce","div","ResPost","Name","input","Comment","textarea","Write","useStyles","theme","button","margin","spacing","root","flexGrow","Post","Message","ErrorMsg","span","Main","main","Thread","register","setValue","handleSubmit","formState","errors","posts","setPosts","onSubmit","data","e","name","post","headers","then","res","target","reset","catch","console","log","classes","get"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\n\ntype FormInputs = {\n  name: string,\n  message: string,\n};\n\nconst Responce = styled.div`\n  margin: 90px 110px 0px;\n`\nconst ResPost = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 20px;\n  border-bottom: 1px dotted #dcdcdc;\n  padding-bottom: 5px;\n  margin-bottom: 1em;\n`\nconst Name = styled.input`\n  width: 100%;\n  font-size: 130%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`\nconst Comment = styled.textarea`\n  width: 100%;\n  font-size: 170%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`\n\nconst Write = styled(Button)`\n  float: right;\n  font-size: 20px;\n`\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Post = styled.div`\n  font-size: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  // display: inline-block;\n  border-style: none solid solid none;\n  border-color: #ddd;\n`\nconst Message = styled.div`\n  padding: 12px 0px;\n`\n\nconst ErrorMsg = styled.span`\n  color: deeppink;\n  font-weight: 700;\n`\n\ntype PostType = {\n  id: number;\n  name: string;\n  message: string;\n  ip: string;\n  week: string;\n  created_at: string;\n}\n\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`\n\nconst Thread: React.FC =  () => {\n  const { register, setValue, handleSubmit, formState: { errors } } = useForm<FormInputs>();\n\n  const [posts, setPosts] = useState<Array<PostType>>([]);\n  \n  const onSubmit: SubmitHandler<FormInputs> = (data: FormInputs, e: any) => {\n    if(data.name === ''){\n      data.name = '森のくまさん'\n    }\n    axios.post('http://127.0.0.1:8000/bbs/index/', data,{\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(res => {\n      setPosts([...posts,res.data])\n      setValue('name', '')\n      setValue('message', '')\n      e.target.reset();\n    })\n    .catch(res => {\n      console.log(res)\n    })\n  };\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios.get<Array<PostType>>('http://127.0.0.1:8000/bbs/index/')\n      .then((res) => setPosts(res.data));\n  }, []);\n\n  return (\n    <React.Fragment>\n     <div>\n      まだつくってない\n    </div>\n    </React.Fragment>\n  );\n}\n\nexport default Thread;"]},"metadata":{},"sourceType":"module"}