{"ast":null,"code":"var _jsxFileName = \"/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Thread.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Responce = styled.div`\n  margin: 90px 110px 0px;\n`;\n_c = Responce;\nconst ResPost = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 20px;\n  border-bottom: 1px dotted #dcdcdc;\n  padding-bottom: 5px;\n  margin-bottom: 1em;\n`;\n_c2 = ResPost;\nconst Name = styled.input`\n  width: 100%;\n  font-size: 130%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c3 = Name;\nconst Comment = styled.textarea`\n  width: 100%;\n  font-size: 170%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`;\n_c4 = Comment;\nconst Write = styled(Button)`\n  float: right;\n  font-size: 20px;\n`;\n_c5 = Write;\nconst useStyles = makeStyles(theme => createStyles({\n  button: {\n    margin: theme.spacing(1)\n  },\n  root: {\n    flexGrow: 1\n  }\n}));\nconst Post = styled.div`\n  font-size: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  // display: inline-block;\n  border-style: none solid solid none;\n  border-color: #ddd;\n`;\n_c6 = Post;\nconst Message = styled.div`\n  padding: 12px 0px;\n`;\n_c7 = Message;\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`;\n_c8 = Main;\n\nconst Thread = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  console.log(watch(\"example\")); // watch input value by passing the name of it\n\n  const [posts, setPosts] = useState([]);\n  const [name, setName] = useState('');\n  const [comment, setComment] = useState('');\n\n  const nameChange = e => {\n    setName(e.target.value);\n  };\n\n  const commentChange = e => {\n    setComment(e.target.value);\n  };\n\n  const submit = e => {\n    e.preventDefault(); // レンダリング後にstateが更新されるので、別途変数に代入\n\n    let newName = name;\n\n    if (newName === '') {\n      newName = '森のくまさん';\n    }\n\n    const post = {\n      name: newName,\n      message: comment\n    };\n    axios.post('http://127.0.0.1:8000/bbs/index/', post, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => {\n      setPosts([...posts, res.data]);\n      setName('');\n      setComment('');\n    }).catch(res => {\n      console.log(res);\n    });\n  };\n\n  const classes = useStyles();\n  useEffect(() => {\n    axios.get('http://127.0.0.1:8000/bbs/index/').then(res => setPosts(res.data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Main, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.root,\n          children: posts.map((post, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Post, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: \"mailto:sage\",\n                      children: post.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"2021/05/24(\\u6708) 12:55:00.32\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.ip\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Message, {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: post.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Responce, {\n          children: [/*#__PURE__*/_jsxDEV(ResPost, {\n            children: \"\\u30EC\\u30B9\\u3092\\u6295\\u7A3F\\u3059\\u308B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(onSubmit),\n            children: [/*#__PURE__*/_jsxDEV(Name, {\n              defaultValue: \"test\",\n              ...register(\"example\"),\n              size: 70,\n              name: \"name\",\n              value: name,\n              onChange: nameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...register(\"exampleRequired\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), errors.exampleRequired && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submit,\n            children: [/*#__PURE__*/_jsxDEV(Name, {\n              placeholder: '名前(省略可)',\n              size: 70,\n              name: \"name\",\n              value: name,\n              onChange: nameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Comment, {\n              placeholder: 'コメント内容',\n              rows: 5,\n              cols: 70,\n              name: \"message\",\n              value: comment,\n              onChange: commentChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Write, {\n              variant: \"contained\",\n              color: \"primary\",\n              className: classes.button,\n              endIcon: /*#__PURE__*/_jsxDEV(CreateIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 94\n              }, this),\n              type: \"submit\",\n              children: \"\\u66F8\\u304D\\u8FBC\\u3080\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Thread, \"I8IG8cKvhCrq78Gnj54bRRQo/9A=\", false, function () {\n  return [useForm, useStyles];\n});\n\n_c9 = Thread;\nexport default Thread;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Responce\");\n$RefreshReg$(_c2, \"ResPost\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"Comment\");\n$RefreshReg$(_c5, \"Write\");\n$RefreshReg$(_c6, \"Post\");\n$RefreshReg$(_c7, \"Message\");\n$RefreshReg$(_c8, \"Main\");\n$RefreshReg$(_c9, \"Thread\");","map":{"version":3,"sources":["/Users/koborihiroshi/develop_now/pythonProject/mysite/tspro/my-app/src/components/Thread.tsx"],"names":["React","useState","useEffect","createStyles","makeStyles","axios","Button","CreateIcon","Container","styled","useForm","Responce","div","ResPost","Name","input","Comment","textarea","Write","useStyles","theme","button","margin","spacing","root","flexGrow","Post","Message","Main","main","Thread","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","posts","setPosts","name","setName","comment","setComment","nameChange","e","target","value","commentChange","submit","preventDefault","newName","post","message","headers","then","res","catch","classes","get","map","index","id","ip","required","exampleRequired"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport CreateIcon from '@material-ui/icons/Create';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { useForm, SubmitHandler } from \"react-hook-form\";\n\ntype Inputs = {\n  example: string,\n  exampleRequired: string,\n};\n\nconst Responce = styled.div`\n  margin: 90px 110px 0px;\n`\nconst ResPost = styled.div`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 20px;\n  border-bottom: 1px dotted #dcdcdc;\n  padding-bottom: 5px;\n  margin-bottom: 1em;\n`\nconst Name = styled.input`\n  width: 100%;\n  font-size: 130%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`\nconst Comment = styled.textarea`\n  width: 100%;\n  font-size: 170%;\n  padding: 8px 14px;\n  margin-bottom: 15px;\n  display: block;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n`\n\nconst Write = styled(Button)`\n  float: right;\n  font-size: 20px;\n`\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    button: {\n      margin: theme.spacing(1),\n    },\n    root: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Post = styled.div`\n  font-size: 20px;\n  background-color: #ffffff;\n  padding: 15px;\n  margin-bottom: 10px;\n  border-radius: 5px;\n  // display: inline-block;\n  border-style: none solid solid none;\n  border-color: #ddd;\n`\nconst Message = styled.div`\n  padding: 12px 0px;\n`\n\ntype PostType = {\n  id: number;\n  name: string;\n  message: string;\n  ip: string;\n  week: string;\n}\n\nconst Main = styled.main`\n  background-color: #f2f3f7;\n  padding: 70px 0px 100px;\n`\n\nconst Thread: React.FC =  () => {\n  const { register, handleSubmit, watch, formState: { errors } } = useForm<Inputs>();\n  const onSubmit: SubmitHandler<Inputs> = data => console.log(data);\n\n  console.log(watch(\"example\")) // watch input value by passing the name of it\n  const [posts, setPosts] = useState<Array<PostType>>([]);\n  const [name, setName] = useState('');\n  const [comment, setComment] = useState('');\n\n  const nameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value)\n  }\n\n  const commentChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setComment(e.target.value)\n  }\n\n  const submit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // レンダリング後にstateが更新されるので、別途変数に代入\n    let newName = name;\n    if(newName === ''){\n      newName = '森のくまさん';\n    }\n\n    const post = {\n      name: newName ,\n      message: comment\n    }\n\n    axios.post('http://127.0.0.1:8000/bbs/index/', post,{\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n    .then(res => {\n      setPosts([...posts,res.data])\n      setName('')\n      setComment('')\n\n    })\n    .catch(res => {\n      console.log(res)\n    })\n  }\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios.get<Array<PostType>>('http://127.0.0.1:8000/bbs/index/')\n      .then((res) => setPosts(res.data));\n  }, []);\n\n  return (\n    <React.Fragment>\n      <Main>\n        <Container>\n          <div className={classes.root}>\n            {posts.map((post, index) => (\n              <div key={index}>\n                <Post>\n                <div>\n                  <span>{post.id}</span>\n                  <span>\n                    <b><a href=\"mailto:sage\">{post.name}</a></b>\n                  </span>\n                  <span>2021/05/24(月) 12:55:00.32</span>\n                  <span>{post.ip}</span>\n                </div>\n                <Message>\n                  <span>{post.message}</span>\n                </Message>\n              </Post>\n              </div>\n            ))}\n          </div>\n          <Responce>\n            <ResPost>レスを投稿する</ResPost>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Name defaultValue=\"test\" {...register(\"example\")} size={70} name=\"name\" value={name} onChange={nameChange}/>\n              \n              {/* include validation with required or other standard HTML validation rules */}\n              <input {...register(\"exampleRequired\", { required: true })} />\n              {/* errors will return when field validation fails  */}\n              {errors.exampleRequired && <span>This field is required</span>}\n              \n              <input type=\"submit\" />\n            </form>\n            <form onSubmit={submit} >\n              <Name placeholder={'名前(省略可)'} size={70} name=\"name\" value={name} onChange={nameChange}/>\n              <Comment placeholder={'コメント内容'} rows={5} cols={70} name=\"message\" value={comment} onChange={commentChange}/>\n              <Write variant=\"contained\" color=\"primary\" className={classes.button} endIcon={<CreateIcon/>} type='submit'>書き込む</Write>\n            </form>\n          </Responce>\n        </Container>\n      </Main>\n    </React.Fragment>\n  );\n}\n\nexport default Thread;"]},"metadata":{},"sourceType":"module"}